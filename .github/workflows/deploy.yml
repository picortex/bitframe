name: Build & Test

on:
  push:
    branches: [ master ]

env:
  GH_TOKEN: ${{secrets.GITHUB_TOKEN}}
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 16
        uses: actions/setup-java@v1
        with:
          java-version: 16
      - name: Cache Gradle
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Making gradlew executable
        run: chmod +x ./gradlew
        working-directory: .
      - name: Cache konan
        uses: actions/cache@v2
        with:
          path: |
            ~/.konan/dependencies
            ~/.konan/kotlin-native-macos*
          key: ${{ runner.os }}-konan-
          restore-keys: ${{ runner.os }}-konan-
      - name: Cache Node Modules
        uses: actions/cache@v2
        with:
          path: 'build/js'
          key: node-modules

      - name: Login into github docker registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ env.GH_TOKEN }}

      - name: Extract metadata (tags, labels) for Server Docker
        id: metaserver
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/pi-monitor-server

      - name: Extract metadata (tags, labels) for Server Docker
        id: metaclient
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/pi-monitor-browser-client-react

      - name: Create Pi Monitor Server Dockerfile
        run: ./gradlew :pi-monitor-server:createDockerfile

      - name: Build and push Server Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./pi-monitor/pi-monitor-server/build/binaries
          push: true
          tags: 0.0.10
          labels: ${{ steps.metaserver.outputs.labels }}

      - name: Create Pi Monitor Browser React Dockerfile
        run: ./gradlew :pi-monitor-client-browser-react:createDockerfile

      - name: Build and push Client Web Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: ./pi-monitor/pi-monitor-client/pi-monitor-client-browser/pi-monitor-client-browser-react/build/websites/js
          push: true
          tags: ${{ steps.metaclient.outputs.tags }}
          labels: ${{ steps.metaclient.outputs.labels }}

      - name: Create Pi Monitor Docker Compose File
        run: ./gradlew :pi-monitor:createDockerComposeFile

      - name: Deploy Stack
        uses: appleboy/ssh-action@master
        with:
          host: 65.21.254.230
          username: root
          password: bitframe
          script: "cd /apps/pi-monitor/0.0.10/docker-compose.yml && docker-compose pull && docker stack deploy -c docker-compose.yml pi-monitor_0.0.10"
