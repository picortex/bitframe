name: Deploying

on:
  push:
    branches: [ master ]

env:
  REMOTE_HOST: 65.21.254.230
  REMOTE_USER: root
  REMOTE_PASS: bitframe
  GH_TOKEN: ${{ github.token }} # ${{ secrets.GITHUB_TOKEN }}

jobs:
  deploy-production:
    runs-on: "ubuntu-latest"
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: zulu
          cache: gradle

      - name: Configure & restart docker daemon
        run: chmod +x ./devops/dockerd.sh && sudo ./devops/dockerd.sh

      - name: Make gradle executable
        run: chmod +x ./gradlew

      - name: Downloading gradle
        run: ./gradlew --version

      - name: Create pimonitor-app-server docker image
        run: ./gradlew :pimonitor-app-server:createDockerImage

      - name: set versions
        id: versions
        run: |
          echo "::set-output name=current::$(cat ./pimonitor/pimonitor-app/server/build/versioning/current.txt)"
          echo "::set-output name=current_safe::$(cat ./pimonitor/pimonitor-app/server/build/versioning/current_safe.txt)"
          echo "::set-output name=previous::$(cat ./pimonitor/pimonitor-app/server/build/versioning/previous.txt)"
          echo "::set-output name=previous_safe::$(cat ./pimonitor/pimonitor-app/server/build/versioning/previous_safe.txt)"

      - name: Create Pi Monitor Docker Compose Production File
        run: ./gradlew :pimonitor-app-server:createDockerComposeProductionFile

      - name: Push pimonitor-app-server docker image to picortex docker registry
        run: ./gradlew :pimonitor-app-server:dockerPushToPicortex

      - name: Copy DockerCompose file via ssh password
        uses: appleboy/scp-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          password: ${{ env.REMOTE_PASS }}
          source: "pimonitor/pimonitor-app/server/build/docker/docker-compose-production.yml"
          rm: true
          target: /picortex/apps/pimonitor/${{ steps.versions.outputs.current }}/production

      - name: Deploy Staging Stack
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.REMOTE_HOST }}
          username: ${{ env.REMOTE_USER }}
          password: ${{ env.REMOTE_PASS }}
          script: |
            mkdir /picortex/apps/pimonitor/${{ steps.versions.outputs.current }}/production -p
            mv /picortex/apps/pimonitor/${{ steps.versions.outputs.current }}/production/pimonitor/pimonitor-app/server/build/docker/docker-compose-production.yml /picortex/apps/pimonitor/${{ steps.versions.outputs.current }}/production/docker-compose.yml
            cd /picortex/apps/pimonitor/${{ steps.versions.outputs.current }}/production
            rm pimonitor -rf
            docker-compose pull
            docker stack rm pimonitor-production-${{ steps.versions.outputs.previous_safe }}
            docker stack deploy -c docker-compose.yml pimonitor-production-${{ steps.versions.outputs.current_safe }}